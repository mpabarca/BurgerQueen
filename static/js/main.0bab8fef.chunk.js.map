{"version":3,"sources":["components/Header.js","components/Order/Client.js","components/Order/ChoiceMenu.js","components/Order/Food.js","components/Order/Menu.js","components/Order/Item.js","components/Order/Resume.js","components/Order/Order.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","bg","variant","className","Button","Client","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateName","bind","assertThisInitialized","nameRef","React","createRef","state","showName","name","e","preventDefault","setState","current","value","Row","id","Col","onSubmit","type","ref","placeholder","Component","ChoiceMenu","checkChoice","choice","target","breakfast","other","onClick","Food","getFood","_this$props$info","info","price","product","size","block","Menu","food","_this2","keys","choiceMenu","map","key","Order_Food","Item","deleteFood","number","Resume","sendKitchen","alert","totalOrder","order","forEach","item","parseInt","Table","i","Order_Item","Order","nameClient","menu","newFood","split","foodObject","newOrder","concat","toConsumableArray","splice","newClient","total","timeS","timeN","newTotal","Order_Client","Order_ChoiceMenu","Order_Menu","toUpperCase","Order_Resume","App","components_Header","components_Order_Order","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6zDAceA,EAVA,WACX,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,UAAU,mBACzCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,wBACAP,EAAAC,EAAAC,cAACK,EAAA,EAAD,gBACAP,EAAAC,EAAAC,cAACK,EAAA,EAAD,iEC6BGC,cAjCX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,WAAWP,EAAKO,WAAWC,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKU,QAAQC,IAAMC,YACnBZ,EAAKa,MAAM,CACPC,UAAS,EACTC,KAAK,IANKf,0EASPgB,GACPA,EAAEC,iBACFd,KAAKe,SAAS,CACVJ,UAAS,IAEbX,KAAKJ,MAAMQ,WAAWJ,KAAKO,QAAQS,QAAQC,wCAM3C,OACI9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAKC,GAAG,mBACJhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACIjC,EAAAC,EAAAC,cAAA,QAAMgC,SAAUrB,KAAKI,YACjBjB,EAAAC,EAAAC,cAAA,SAAO8B,GAAG,cAAcG,KAAK,OAAOC,IAAKvB,KAAKO,QAASiB,YAAY,4BACnErC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQ4B,KAAK,SAAS9B,QAAQ,WAA9B,oBA1BHiC,qCCuBNC,6MAjBXC,YAAY,SAACd,GACTA,EAAEC,iBACF,IAAIc,EAA0B,cAAjBf,EAAEgB,OAAOZ,MAAsBa,IAAYC,IACxDlC,EAAKD,MAAM+B,YAAYC,4EAIvB,OACIzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQD,UAAU,aAAa6B,KAAK,SAAS9B,QAAQ,oBAAoByB,MAAM,YAAYe,QAAShC,KAAK2B,aAAzG,YACAxC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQD,UAAU,aAAa6B,KAAK,SAAS9B,QAAQ,oBAAoByB,MAAM,QAAQe,QAAShC,KAAK2B,aAArG,2BAZSF,aCgBVQ,qBApBX,SAAAA,EAAYrC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACdpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KACDsC,QAAQrC,EAAKqC,QAAQ7B,KAAbP,OAAAQ,EAAA,EAAAR,CAAAD,IAFCA,uEAIVgB,GACJA,EAAEC,iBACFd,KAAKJ,MAAMsC,QAAQrB,EAAEgB,OAAOZ,wCAGxB,IAAAkB,EACenC,KAAKJ,MAAMwC,KAAvBxB,EADHuB,EACGvB,KAAKyB,EADRF,EACQE,MACNC,EAAS1B,EAAOyB,EACtB,OACIlD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASF,QAAQ,YAAY+C,KAAK,KAAKtB,MAAOqB,EAASN,QAAShC,KAAKkC,QAASM,OAAK,GAC/ErD,EAAAC,EAAAC,cAAA,UAAKuB,EAAL,IAAYyB,WAfTZ,cCuBJgB,6MAnBXP,QAAQ,SAACQ,GACL7C,EAAKD,MAAMsC,QAAQQ,4EAEf,IAAAC,EAAA3C,KACJ,OACIb,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAKC,GAAG,iBACHrB,OAAO8C,KAAK5C,KAAKJ,MAAMiD,YAAYC,IAAI,SAAAC,GAAG,OACvC5D,EAAAC,EAAAC,cAAC2D,EAAD,CACID,IAAKA,EACLX,KAAMO,EAAK/C,MAAMiD,WAAWE,GAC5Bb,QAASS,EAAKT,oBAZnBT,6BCsBJwB,cAvBX,SAAAA,EAAYrD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACdpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KAAMJ,KACDsD,WAAWrD,EAAKqD,WAAW7C,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFFA,0EAIPgB,GACPA,EAAEC,iBACFd,KAAKJ,MAAMsD,WAAWrC,EAAEgB,OAAOZ,wCAG3B,IAAAkB,EACenC,KAAKJ,MAAMwC,KAAvBxB,EADHuB,EACGvB,KAAKyB,EADRF,EACQE,MACZ,OACIlD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAMW,KAAKJ,MAAMuD,OAAQ,GACzBhE,EAAAC,EAAAC,cAAA,UAAKuB,GACLzB,EAAAC,EAAAC,cAAA,UAAKgD,GACLlD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQF,QAAQ,SAASyB,MAAOjB,KAAKJ,MAAMuD,OAAQnB,QAAShC,KAAKkD,YAAjE,cAlBDzB,aC2DJ2B,cAtDX,SAAAA,EAAYxD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACdvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMJ,KACDsD,WAAWrD,EAAKqD,WAAW7C,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKwD,YAAYxD,EAAKwD,YAAYhD,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHHA,0EAKPkD,GACP/C,KAAKJ,MAAMsD,WAAWH,uCAEdlC,GACRA,EAAEC,iBACFd,KAAKJ,MAAMyD,YAAYxC,EAAEgB,OAAOZ,OAChCqC,MAAM,qDAEF,IAAAX,EAAA3C,KACAuD,EAAW,EAIf,OAHAvD,KAAKJ,MAAM4D,MAAMC,QAAQ,SAAAC,GACrBH,GAAYI,SAASD,EAAKrB,SAG1BlD,EAAAC,EAAAC,cAAA,OAAK8B,GAAG,mBACJhC,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACAzE,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aACKS,OAAO8C,KAAK5C,KAAKJ,MAAM4D,OAAOV,IAAI,SAACC,EAAIc,GAAL,OAC/B1E,EAAAC,EAAAC,cAACyE,EAAD,CACIX,OAAQU,EACRd,IAAKA,EACLX,KAAMO,EAAK/C,MAAM4D,MAAMT,GACvBG,WAAYP,EAAKO,gBAM7B/D,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKkE,MAIbpE,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQF,QAAQ,UAAUyB,MAAOsC,EAAYvB,QAAShC,KAAKqD,aAA3D,2BAjDK5B,aC8FNsC,cA1FX,SAAAA,EAAYnE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACdlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KAUVQ,WAAW,SAACQ,GACR,IAAIoD,EAAWpD,EACff,EAAKkB,SAAS,CACVH,KAAKoD,KAdKnE,EAiBlB8B,YAAY,SAACsC,GACTpE,EAAKkB,SAAS,CACV8B,WAAWoB,KAnBDpE,EAsBlBqC,QAAQ,SAACQ,GACL,IAAIwB,EAAQxB,EAAKyB,MAAM,KACnBC,EAAW,CACXxD,KAAMsD,EAAQ,GACd7B,MAAO6B,EAAQ,IAEfG,EAAQ,GAAAC,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAKD,EAAKa,MAAM8C,OAAhB,CAAuBY,IACnCvE,EAAKkB,SAAS,CACVyC,MAAOa,KA9BGxE,EAiClBqD,WAAW,SAACH,GACR,IAAIsB,EAASvE,OAAAyE,EAAA,EAAAzE,CAAID,EAAKa,MAAM8C,OAC5Ba,EAASG,OAAOzB,EAAI,GACpBlD,EAAKkB,SAAS,CACVyC,MAAMa,KArCIxE,EAwClB4E,UAAU,WACN5E,EAAKkB,SAAS,CACVH,KAAK,GACLiC,WAAW,GACXW,MAAM,GACNkB,MAAM,EACNC,MAAM,GACNC,MAAM,KA/CI/E,EAkDlBwD,YAAY,SAACwB,GACLhF,EAAKkB,SAAS,CACV2D,MAAMG,KAlDdhF,EAAKa,MAAM,CACPE,KAAK,GACLiC,WAAW,GACXW,MAAM,GACNkB,MAAM,EACNC,MAAM,GACNC,MAAM,GARI/E,wEAwDd,OACIV,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAKzB,UAAU,kBACXN,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACIjC,EAAAC,EAAAC,cAACyF,EAAD,CACI1E,WAAYJ,KAAKI,aAErBjB,EAAAC,EAAAC,cAAC0F,EAAD,CACIpD,YAAa3B,KAAK2B,cAEtBxC,EAAAC,EAAAC,cAAC2F,EAAD,CACInC,WAAY7C,KAAKU,MAAMmC,WACvBX,QAASlC,KAAKkC,WAGtB/C,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACIjC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACIjC,EAAAC,EAAAC,cAAA,OAAK8B,GAAG,cAAenB,KAAKU,MAAME,KAAMqE,gBAE5C9F,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACIjC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQF,QAAQ,oBAAoBwC,QAAShC,KAAKyE,WAAlD,mBAGRtF,EAAAC,EAAAC,cAAC6F,EAAD,CACI1B,MAAOxD,KAAKU,MAAM8C,MAClBN,WAAYlD,KAAKkD,WACjBG,YAAarD,KAAKqD,uBAnFtB5B,aCML0D,mLATX,OACEhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAACgG,EAAD,cALU5D,aCOE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0bab8fef.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\nimport {Navbar, Button} from 'react-bootstrap';\n\nconst Header = () =>{\n    return(\n        <Navbar bg=\"light\" variant=\"light\" className=\"containerHeader\">\n            <Button >REALIZAR PEDIDO</Button>\n            <Button >CENTRAL</Button>\n            <Button >COCINA</Button>\n        </Navbar>\n    )\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport './css/client.css';\nimport {Button, Row, Col} from 'react-bootstrap';\n\nclass Client extends Component{\n    constructor(props){\n        super(props);\n        this.updateName=this.updateName.bind(this);\n        this.nameRef=React.createRef();\n        this.state={\n            showName:false,\n            name:''\n        };\n    }\n    updateName(e){\n        e.preventDefault();\n        this.setState({\n            showName:true,\n        });\n        this.props.updateName(this.nameRef.current.value);\n\n    }\n\n\n    render(){\n        return(\n            <Row id=\"containerClient\">\n                <Col>\n                    <form onSubmit={this.updateName}>\n                        <input id=\"inputClient\" type=\"text\" ref={this.nameRef} placeholder=\"Ingresar nombre Cliente\"></input>\n                        <Button type=\"submit\" variant=\"warning\">ENVIAR</Button>\n                    </form>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default Client;","import React, {Component} from 'react';\nimport './css/choiceMenu.css';\nimport {Button} from 'react-bootstrap';\nimport {breakfast} from './json/breakfast.json';\nimport {other} from './json/other.json';\n\n// COMPONENTE PRINCIPAL 1Â° HU\n\nclass ChoiceMenu extends Component{\n\n    checkChoice=(e)=>{\n        e.preventDefault();\n        let choice=((e.target.value==='breakfast')?(breakfast):(other));\n        this.props.checkChoice(choice);\n        \n    }\n    render(){\n        return(\n            <div>\n                <Button className=\"buttonMenu\" type=\"submit\" variant=\"outline-secondary\" value=\"breakfast\" onClick={this.checkChoice}>DESAYUNO</Button>\n                <Button className=\"buttonMenu\" type=\"submit\" variant=\"outline-secondary\" value=\"other\" onClick={this.checkChoice}>ALMUERZO Y CENA</Button>\n                \n            </div>\n        )\n    }\n}\n\nexport default ChoiceMenu;","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap';\n\nclass Food extends Component{\n    constructor(props){\n        super(props);\n        this.getFood=this.getFood.bind(this);\n    }\n    getFood(e){\n        e.preventDefault();\n        this.props.getFood(e.target.value);\n    }\n\n    render(){\n        const {name,price}=this.props.info;\n        const product= name + price;\n        return(\n            <Button  variant=\"secondary\" size=\"lg\" value={product} onClick={this.getFood} block>\n                <h6>{name} {price}</h6>\n            </Button>\n        )\n    }\n}\n\nexport default Food;","import React, {Component} from 'react';\nimport './css/menu.css';\nimport {Row} from 'react-bootstrap';\nimport Food from './Food';\n\nclass Menu extends Component{\n\n    getFood=(food)=>{\n        this.props.getFood(food);\n    }\n    render(){\n        return(\n            <Row id=\"containerMenu\">\n                {Object.keys(this.props.choiceMenu).map(key=>(\n                    <Food\n                        key={key}\n                        info={this.props.choiceMenu[key]}\n                        getFood={this.getFood}\n                    />\n                ))}\n\n            </Row>\n        )\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap';\n\nclass Item extends Component{\n    constructor(props){\n        super(props);\n        this.deleteFood=this.deleteFood.bind(this);\n    }\n    deleteFood(e){\n        e.preventDefault();\n        this.props.deleteFood(e.target.value);\n    }\n\n    render(){\n        const {name,price}=this.props.info;\n        return(\n            <tr>\n                <td>{(this.props.number)+1}</td>\n                <td>{name}</td>\n                <td>{price}</td>\n                <td>\n                    <Button variant=\"danger\" value={this.props.number} onClick={this.deleteFood}>X</Button>\n                </td>\n            </tr>\n        )\n    }\n}\nexport default Item;","import React, {Component} from 'react';\nimport './css/resume.css';\nimport {Table, Button} from 'react-bootstrap';\nimport Item from './Item';\n\n// COMPONENTE PRINCIPAL 1Â° HU\n\nclass Resume extends Component{\n    constructor(props){\n        super(props);\n        this.deleteFood=this.deleteFood.bind(this);\n        this.sendKitchen=this.sendKitchen.bind(this);\n    }\n    deleteFood(key){\n        this.props.deleteFood(key);\n    }\n    sendKitchen(e){\n        e.preventDefault();\n        this.props.sendKitchen(e.target.value);\n        alert('Enviado a cocina');\n    }\n    render(){  \n        let totalOrder=0;\n        this.props.order.forEach(item=>{\n            totalOrder+=parseInt(item.price);\n        });\n        return(\n            <div id=\"containerResume\">\n                <Table>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>PRODUCTO</th>\n                        <th>PRECIO</th>\n                        <th>BORRAR</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(this.props.order).map((key,i)=>(\n                        <Item\n                            number={i}\n                            key={key}\n                            info={this.props.order[key]}\n                            deleteFood={this.deleteFood}\n                        />\n                    ))}\n                    \n\n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>TOTAL:</td>\n                        <td>{totalOrder}</td>\n                    </tr>\n                </tbody>\n                </Table>\n                <Button variant=\"success\" value={totalOrder} onClick={this.sendKitchen}>ENVIAR A COCINA</Button>\n            </div>\n        )\n    }\n}\n\nexport default Resume;","import React, {Component} from 'react';\nimport './css/order.css';\nimport Client from './Client';\nimport ChoiceMenu from './ChoiceMenu';\nimport Menu from './Menu';\nimport Resume from './Resume';\nimport { Row, Col, Button } from 'react-bootstrap';\n\n// COMPONENTE PRINCIPAL 1Â° HU\n\nclass Order extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:'',\n            choiceMenu:[],\n            order:[],\n            total:0,\n            timeS:'',\n            timeN:0\n        }\n    }\n    updateName=(name)=>{\n        let nameClient=name\n        this.setState({\n            name:nameClient\n        });\n    }\n    checkChoice=(menu)=>{\n        this.setState({\n            choiceMenu:menu\n        });\n    }\n    getFood=(food)=>{\n        let newFood=food.split('$');\n        let foodObject={\n            name: newFood[0],\n            price: newFood[1]\n        }\n        let newOrder=[...this.state.order, foodObject]\n        this.setState({\n            order: newOrder\n        })\n    }\n    deleteFood=(key)=>{\n        let newOrder=[...this.state.order];\n        newOrder.splice(key,1);\n        this.setState({\n            order:newOrder\n        })\n    }\n    newClient=()=>{\n        this.setState({\n            name:'',\n            choiceMenu:[],\n            order:[],\n            total:0,\n            timeS:'',\n            timeN:0 \n        })\n    }\n    sendKitchen=(newTotal)=>{\n            this.setState({\n                total:newTotal\n            });\n        }\n    render(){\n        return(\n            <Row className=\"containerOrder\">\n                <Col>\n                    <Client\n                        updateName={this.updateName}\n                    />\n                    <ChoiceMenu\n                        checkChoice={this.checkChoice}\n                    />\n                    <Menu\n                        choiceMenu={this.state.choiceMenu}\n                        getFood={this.getFood}\n                    />\n                </Col>\n                <Col>\n                    <Row>\n                        <Col>\n                            <div id=\"nameClient\">{(this.state.name).toUpperCase()}</div>\n                        </Col>\n                        <Col>\n                            <Button variant=\"outline-secondary\" onClick={this.newClient}>Nuevo Cliente</Button>\n                        </Col>\n                    </Row>\n                    <Resume\n                        order={this.state.order}\n                        deleteFood={this.deleteFood}\n                        sendKitchen={this.sendKitchen}\n                    />\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default Order","import React, {Component} from 'react';\nimport './components/Order/css/App.css';\nimport Header from './components/Header';\nimport Order from './components/Order/Order';\n\nclass App extends Component{\n  render(){\n    return (\n      <div >\n        <Header/>\n        <Order/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/Order/css/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}